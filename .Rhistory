0,580,3.46,3
0,620,3.69,3
1,580,2.86,4
0,560,2.52,2
1,480,3.58,1
0,660,3.49,2
0,700,3.82,3
0,600,3.13,2
0,640,3.5,2
1,700,3.56,2
0,520,2.73,2
0,580,3.3,2
0,700,4,1
0,440,3.24,4
0,720,3.77,3
0,500,4,3
0,600,3.62,3
0,400,3.51,3
0,540,2.81,3
0,680,3.48,3
1,800,3.43,2
0,500,3.53,4
1,620,3.37,2
0,520,2.62,2
1,620,3.23,3
0,620,3.33,3
0,300,3.01,3
0,620,3.78,3
0,500,3.88,4
0,700,4,2
1,540,3.84,2
0,500,2.79,4
0,800,3.6,2
0,560,3.61,3
0,580,2.88,2
0,560,3.07,2
0,500,3.35,2
1,640,2.94,2
0,800,3.54,3
0,640,3.76,3
0,380,3.59,4
1,600,3.47,2
0,560,3.59,2
0,660,3.07,3
1,400,3.23,4
0,600,3.63,3
0,580,3.77,4
0,800,3.31,3
1,580,3.2,2
1,700,4,1
0,420,3.92,4
1,600,3.89,1
1,780,3.8,3
0,740,3.54,1
1,640,3.63,1
0,540,3.16,3
0,580,3.5,2
0,740,3.34,4
0,580,3.02,2
0,460,2.87,2
0,640,3.38,3
1,600,3.56,2
1,660,2.91,3
0,340,2.9,1
1,460,3.64,1
0,460,2.98,1
1,560,3.59,2
0,540,3.28,3
0,680,3.99,3
1,480,3.02,1
0,800,3.47,3
0,800,2.9,2
1,720,3.5,3
0,620,3.58,2
0,540,3.02,4
0,480,3.43,2
1,720,3.42,2
0,580,3.29,4
0,600,3.28,3
0,380,3.38,2
0,420,2.67,3
1,800,3.53,1
0,620,3.05,2
1,660,3.49,2
0,480,4,2
0,500,2.86,4
0,700,3.45,3
0,440,2.76,2
1,520,3.81,1
1,680,2.96,3
0,620,3.22,2
0,540,3.04,1
0,800,3.91,3
0,680,3.34,2
0,440,3.17,2
0,680,3.64,3
0,640,3.73,3
0,660,3.31,4
0,620,3.21,4
1,520,4,2
1,540,3.55,4
1,740,3.52,4
0,640,3.35,3
1,520,3.3,2
1,620,3.95,3
0,520,3.51,2
0,640,3.81,2
0,680,3.11,2
0,440,3.15,2
1,520,3.19,3
1,620,3.95,3
1,520,3.9,3
0,380,3.34,3
0,560,3.24,4
1,600,3.64,3
1,680,3.46,2
0,500,2.81,3
1,640,3.95,2
0,540,3.33,3
1,680,3.67,2
0,660,3.32,1
0,520,3.12,2
1,600,2.98,2
0,460,3.77,3
1,580,3.58,1
1,680,3,4
1,660,3.14,2
0,660,3.94,2
0,360,3.27,3
0,660,3.45,4
0,520,3.1,4
1,440,3.39,2
0,600,3.31,4
1,800,3.22,1
1,660,3.7,4
0,800,3.15,4
0,420,2.26,4
1,620,3.45,2
0,800,2.78,2
0,680,3.7,2
0,800,3.97,1
0,480,2.55,1
0,520,3.25,3
0,560,3.16,1
0,460,3.07,2
0,540,3.5,2
0,720,3.4,3
0,640,3.3,2
1,660,3.6,3
1,400,3.15,2
1,680,3.98,2
0,220,2.83,3
0,580,3.46,4
1,540,3.17,1
0,580,3.51,2
0,540,3.13,2
0,440,2.98,3
0,560,4,3
0,660,3.67,2
0,660,3.77,3
1,520,3.65,4
0,540,3.46,4
1,300,2.84,2
1,340,3,2
1,780,3.63,4
1,480,3.71,4
0,540,3.28,1
0,460,3.14,3
0,460,3.58,2
0,500,3.01,4
0,420,2.69,2
0,520,2.7,3
0,680,3.9,1
0,680,3.31,2
1,560,3.48,2
0,580,3.34,2
0,500,2.93,4
0,740,4,3
0,660,3.59,3
0,420,2.96,1
0,560,3.43,3
1,460,3.64,3
1,620,3.71,1
0,520,3.15,3
0,620,3.09,4
0,540,3.2,1
1,660,3.47,3
0,500,3.23,4
1,560,2.65,3
0,500,3.95,4
0,580,3.06,2
0,520,3.35,3
0,500,3.03,3
0,600,3.35,2
0,580,3.8,2
0,400,3.36,2
0,620,2.85,2
1,780,4,2
0,620,3.43,3
1,580,3.12,3
0,700,3.52,2
1,540,3.78,2
1,760,2.81,1
0,700,3.27,2
0,720,3.31,1
1,560,3.69,3
0,720,3.94,3
1,520,4,1
1,540,3.49,1
0,680,3.14,2
0,460,3.44,2
1,560,3.36,1
0,480,2.78,3
0,460,2.93,3
0,620,3.63,3
0,580,4,1
0,800,3.89,2
1,540,3.77,2
1,680,3.76,3
1,680,2.42,1
1,620,3.37,1
0,560,3.78,2
0,560,3.49,4
0,620,3.63,2
1,800,4,2
0,640,3.12,3
0,540,2.7,2
0,700,3.65,2
1,540,3.49,2
0,540,3.51,2
0,660,4,1
1,480,2.62,2
0,420,3.02,1
1,740,3.86,2
0,580,3.36,2
0,640,3.17,2
0,640,3.51,2
1,800,3.05,2
1,660,3.88,2
1,600,3.38,3
1,620,3.75,2
1,460,3.99,3
0,620,4,2
0,560,3.04,3
0,460,2.63,2
0,700,3.65,2
0,600,3.89,3
testing
help
help()
library(readr)
binary_1_ <- read_csv("D:/Ä°ndirilenler/binary (1).csv")
View(binary_1_)
plot binary_1_
plot admit/gpa ~ rank, data=binary_1_
plot (admit/gpa ~ rank, data=binary_1_)
cor(binary_1_)
glm.out=glm(admit~gre*gpa/rank,family = binomial(logit),data=binary_1_)
summary(glm.out)
glm.out=glm(admit~(gre*gpa)/rank,family = binomial(logit),data=binary_1_)
summary(glm.out)
anova(glm.out, test="Chisq")
plot(glm.out$fitted)
499.98-457.43
1-pchisq(8.157,df=4)
glm.out
View(glm.out)
View(glm.out)
View(glm.out)
View(binary_1_)
View(glm.out)
glm.out
plot (glm.out)
plot (glm.out)
View(binary_1_)
glm.out
plot(glm.out)
glm.out
glm.out=glm(formula = admit ~ (gre * gpa)/(rank+4), family = binomial(logit),
data = binary_1_)
glm.out=glm(formula = admit ~ (gre * gpa)/(rank+4), family = binomial(logit),
data = binary_1_)
glm.out=glm(formula = admit ~ (gre * gpa)/(rank+4), family = binomial(logit), data = binary_1_)
binary_1_
glm.out
glm.out=glm(admit ~ ((gre*gpa)/(rank+4)), family=binomial(logit), data=binary_1_)
glm.out=glm(admit ~ ((gre*gpa)/(rank)), family=binomial(logit), data=binary_1_)
glm.out=glm(admit ~ ((gre*gpa)/(rank+1)), family=binomial(logit), data=binary_1_)
glm.out=glm(admit ~ ((gre*gpa)/(rank+5)), family=binomial(logit), data=binary_1_)
glm.out=glm(admit ~ ((gre*gpa)/(rank+2)), family=binomial(logit), data=binary_1_)
glm.out=glm(admit ~ ((gre*gpa)/(rank+1)), family=binomial(logit), data=binary_1_)
summary(glm.out)
glm.out=glm(admit ~ ((gre*gpa)/(rank)), family=binomial(logit), data=binary_1_)
summary(glm.out)
glm.out=glm(admit ~ (gre*gpa)/(rank), family=binomial(logit), data=binary_1_)
summary(glm.out)
summary(glm.out)
anova(glm.out)
anova(glm.out,test = "Chisq")
glm.out2=glm(formula=admit~(gre*gpa),family = binomial(logit),data=binary_1_)
View(glm.out2)
summary(glm.out2)
anova(glm.out2,test = "Chisq")
binary2= binary_1_
score=((gre*gpa)/rank,data=binary)
score=gre$binary2
score=binary2[,"gre"]
score2=binary2[,"gpa"]
score3=binary2[,"rank"]
score4=rank+4
score4=score3+4
finalscore=(score*score2)/score4
testing=c(binary2,finalscore)
View(testing)
binary2$finalscore=finalscore
View(binary2)
plot(finalscore,admit)
plot(finalscore,admit,data=binary2)
plot(finalscore~admit,data=binary2)
plot(admit~finalscore,data=binary2)
plot(finalscore~,data=binary2)
plot(finalscore~0,data=binary2)
train=data[1:200]
train=data[1:200,]
train=binary2[1:200,]
model=glm(finalscore,family=binomial(link=logit),data=train)
model=glm(finalscore~.,family=binomial(link=logit),data=train)
model=glm(finalscore~admit,family=binomial(link=logit),data=train)
model=glm(finalscore~admit,family=binomial(link="logit"),data=train)
model=glm(finalscore~admit,family=binomial(link="logit"),data=train)
model=glm(,family=binomial(link="logit"),data=train)
model=glm(gre~admit,family=binomial(link="logit"),data=train)
model=glm(formula=finalscore~admit,family=binomial(link="logit"),data=train)
model=glm(formula=finalscore~admit,family=binomial(logit),data=train)
model=glm(formula=finalscore~admit,family=binomial(logit),data=train)
model=glm(formula=(finalscore~admit),family=binomial(logit),data=train)
plot(finalscore~admit,data=train)
plot(admit~finalscore,data=train)
sum(train$admit)
binary_1_
View(glm.out)
anova(glm.out,)
summary(glm.out)
glm.out3=glm((gre+gpa+rank)~admit,family = binomial("logit"), data=binary_1_)
glm.out3=glm((gre+gpa+rank)~admit,family = binomial(logit), data=binary_1_)
glm.out3=glm(admit~gre*gpa*rank,family = binomial(link="logit"),data = binary_1_)
summary(glm.out3)
glm.out3=glm(admit~gre*gpa/rank,family = binomial(link="logit"),data = binary_1_)
summary(glm.out3)
anova(glm.out3,test = "Chisq")
65.438-57.281
499.98-457.43
1-pchisq(42.55,df=4)
plot(glm.out$fitted)
plot(glm.out)
plot(glm.out$fitted)
plot(glm.out)
glm.out3=glm(admit~gre*gpa/rank^(-2),family = binomial(link="logit"),data = binary_1_)
glm.out3=glm(admit~gre*gpa/rank^-2,family = binomial(link="logit"),data = binary_1_)
glm.out3=glm(admit~gre*gpa/(rank^(-2)),family = binomial(link="logit"),data = binary_1_)
glm.out3=glm(admit~gre*gpa/root(rank),family = binomial(link="logit"),data = binary_1_)
plot(glm.out3$fitted)
binary2$rootrank=rank^1/2
binary2$rootrank=rank^0,5
binary2$rootrank=rank^0.5
binary2$rootrank=rank+10
binary2$rootrank=rank
binary2$rootrank=binary2$rank^0.5
glm.out4=glm(admit~gre*gpa/rootrank,family = binomial(link="logit"),data = binary_1_)
glm.out4=glm(admit~gre*gpa/rootrank,family = binomial(link="logit"),data = binary2)
summary(glm.out4)
anova(glm.out4,test = "Chisq")
binary2$rootrank=binary2$rank^0.3
summary(glm.out4)
anova(glm.out4,test = "Chisq")
binary2$rootrank=binary2$rank^0.3
binary2$rootrank=binary2$rank
binary2$rootrank=binary2$rank^0.3
glm.out4=glm(admit~gre*gpa/rootrank,family = binomial(link="logit"),data = binary2)
summary(glm.out4)
anova(glm.out4,test = "Chisq")
anova(glm.out4,test = "Chisq")
summary(glm.out4)
View(glm.out)
View(glm.out)
View(glm.out4)
glmafter=glm(formula = admit~gpa+gre+rank,family = binomial,data = binary2)
summary(glmafter)
newdata=data.frame(gre=500,gpa=3.20,rank=2)
View(newdata)
View(binary_1_)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=3.20,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=3.4,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=4.00,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4.00,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=3.97,rank=1)
predict(glmafter,newdata,type="response")
predict(glm.out4,newdata,type="response")
predict(glm.out4,newdata,type="response")
predict(glm.out3,newdata,type="response")
newdata=data.frame(gre=800,gpa=4.00,rank=1)
predict(glm.out3,newdata,type="response")
newdata=data.frame(gre=800,gpa=4.00,rank=3)
predict(glm.out3,newdata,type="response")
predict(glmafter,newdata,type="response")
summary(glmafter)
summary(glm.out4)
summary(glmafter)
summary(glm.out4)
summary(glmafter)
summary(glm.out4)
summary(glm.out4)
summary(glmafter)
library(ResourceSelection)
install.packages("ResourceSelection")
library(ResourceSelection)
hoslem.test(binary2$admit,fitted(glmafter))
hoslem.test(binary_1_$admit,fitted(glmafter))
newdata=data.frame(gre=220,gpa=2.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=200,gpa=2.00,rank=3)
predict(glmafter,newdata,type="response")
glmafter2=glm(formula = admit~gpa*gre*rank,family = binomial,data = binary2)
summary(glmafter2)
anova(glmafter2)
delete(glm.out3)
glm.out2=NULL
rm(glm.out2)
glmafter2=glm(formula = admit~gpa+gre+rank,family = binomial,data = binary2)
summary(glmafter2)
glmafter2=glm(formula = admit~gpa*gre+rank,family = binomial,data = binary2)
summary(glmafter2)
glmafter2=glm(formula = admit~gpa-gre+rank,family = binomial,data = binary2)
summary(glmafter2)
glmafter2=glm(formula = admit~gpa+gre+rank,family = binomial,data = binary2)
summary(glmafter2)
newdata=data.frame(gre=200,gpa=2.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=200,gpa=2.00,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=200,gpa=3.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=200,gpa=4.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=400,gpa=2.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2.00,rank=3)
predict(glmafter,newdata,type="response")
summary(glmafter)
newdata=data.frame(gre=800,gpa=3.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4.00,rank=3)
newdata=data.frame(gre=800,gpa=4.00,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2.00,rank=2)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2.00,rank=1)
predict(glmafter,newdata,type="response")
summary(glmafter)
predict(newdata,glmafter)
predict(glmafter,newdata)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=2.5,rank=2)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=2.5,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2.5,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=500,gpa=2,rank=1)
predict(glmafter,newdata,type="response")
summary(glmafter)
predict(glmafter,newdata,type="response")
summary(glmafter)
anova(glmafter)
newdata=data.frame(gre=1000,gpa=5,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2.5,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2.5,rank=2)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2.5,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2,rank=2)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=3,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=4,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=1000,gpa=2,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2,rank=1)
newdata=data.frame(gre=800,gpa=4,rank=3)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=2,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=800,gpa=4,rank=1)
predict(glmafter,newdata,type="response")
newdata=data.frame(gre=220,gpa=2,rank=3)
predict(glmafter,newdata,type="response")
